import Head from "next/head";
import Image from "next/image";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";
import { MetaMaskSDK, SDKProvider } from "@metamask/sdk";

const inter = Inter({ subsets: ["latin"] });

declare global {
  interface Window {
    ethereum?: SDKProvider;
  }
}

export default function Home() {
  const connect = () => {
    if (!window.ethereum) {
      throw new Error(`invalid ethereum provider`);
    }

    window.ethereum
      .request({
        method: "eth_requestAccounts",
        params: [],
      })
      .then((accounts) => {
        if (accounts) {
          console.debug(`connect:: accounts result`, accounts);
          const account = (accounts as string[])[0];
          alert(`connect:: account ${account}`);
        }
      })
      .catch((e) => console.log("request accounts ERR", e));
  };

  const initSDK = async () => {
    const MMSDK = new MetaMaskSDK();
    await MMSDK.init();

    const provider = MMSDK.getProvider();

    provider
      .request({
        method: "eth_requestAccounts",
        params: [],
      })
      .then((accounts) => {
        if (accounts) {
          console.debug(`connect:: accounts result`, accounts);
          const account = (accounts as string[])[0];
          alert(`connect:: account ${account}`);
        }
      })
      .catch((e) => console.log("request accounts ERR", e));
  };
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <button className={styles.button} onClick={connect}>
          connect
        </button>
        <button className={styles.button} onClick={initSDK}>
          initSDK
        </button>
      </main>
    </>
  );
}
